//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CurseServices.AddOnService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AddOn", Namespace="Curse.AddOns")]
    [System.SerializableAttribute()]
    public partial class AddOn : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<CurseServices.AddOnService.AddOnAttachment> AttachmentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<CurseServices.AddOnService.AddOnAuthor> AuthorsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AvatarUrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<CurseServices.AddOnService.AddOnCategory> CategoriesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CurseServices.AddOnService.CategorySection CategorySectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CommentCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DefaultFileIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DonationUrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double DownloadCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExternalUrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GameIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<CurseServices.AddOnService.GameVersionLatestFile> GameVersionLatestFilesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IconIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InstallCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IsFeaturedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<CurseServices.AddOnService.AddOnFile> LatestFilesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LikesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CurseServices.AddOnService.PackageTypes PackageTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PopularityScoreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrimaryAuthorNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrimaryCategoryAvatarUrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PrimaryCategoryIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrimaryCategoryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RatingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CurseServices.AddOnService.ProjectStage StageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CurseServices.AddOnService.ProjectStatus StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SummaryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WebSiteURLField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<CurseServices.AddOnService.AddOnAttachment> Attachments {
            get {
                return this.AttachmentsField;
            }
            set {
                if ((object.ReferenceEquals(this.AttachmentsField, value) != true)) {
                    this.AttachmentsField = value;
                    this.RaisePropertyChanged("Attachments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<CurseServices.AddOnService.AddOnAuthor> Authors {
            get {
                return this.AuthorsField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthorsField, value) != true)) {
                    this.AuthorsField = value;
                    this.RaisePropertyChanged("Authors");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AvatarUrl {
            get {
                return this.AvatarUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.AvatarUrlField, value) != true)) {
                    this.AvatarUrlField = value;
                    this.RaisePropertyChanged("AvatarUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<CurseServices.AddOnService.AddOnCategory> Categories {
            get {
                return this.CategoriesField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoriesField, value) != true)) {
                    this.CategoriesField = value;
                    this.RaisePropertyChanged("Categories");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CurseServices.AddOnService.CategorySection CategorySection {
            get {
                return this.CategorySectionField;
            }
            set {
                if ((object.ReferenceEquals(this.CategorySectionField, value) != true)) {
                    this.CategorySectionField = value;
                    this.RaisePropertyChanged("CategorySection");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CommentCount {
            get {
                return this.CommentCountField;
            }
            set {
                if ((this.CommentCountField.Equals(value) != true)) {
                    this.CommentCountField = value;
                    this.RaisePropertyChanged("CommentCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DefaultFileId {
            get {
                return this.DefaultFileIdField;
            }
            set {
                if ((this.DefaultFileIdField.Equals(value) != true)) {
                    this.DefaultFileIdField = value;
                    this.RaisePropertyChanged("DefaultFileId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DonationUrl {
            get {
                return this.DonationUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.DonationUrlField, value) != true)) {
                    this.DonationUrlField = value;
                    this.RaisePropertyChanged("DonationUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double DownloadCount {
            get {
                return this.DownloadCountField;
            }
            set {
                if ((this.DownloadCountField.Equals(value) != true)) {
                    this.DownloadCountField = value;
                    this.RaisePropertyChanged("DownloadCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExternalUrl {
            get {
                return this.ExternalUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.ExternalUrlField, value) != true)) {
                    this.ExternalUrlField = value;
                    this.RaisePropertyChanged("ExternalUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GameId {
            get {
                return this.GameIdField;
            }
            set {
                if ((this.GameIdField.Equals(value) != true)) {
                    this.GameIdField = value;
                    this.RaisePropertyChanged("GameId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<CurseServices.AddOnService.GameVersionLatestFile> GameVersionLatestFiles {
            get {
                return this.GameVersionLatestFilesField;
            }
            set {
                if ((object.ReferenceEquals(this.GameVersionLatestFilesField, value) != true)) {
                    this.GameVersionLatestFilesField = value;
                    this.RaisePropertyChanged("GameVersionLatestFiles");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IconId {
            get {
                return this.IconIdField;
            }
            set {
                if ((this.IconIdField.Equals(value) != true)) {
                    this.IconIdField = value;
                    this.RaisePropertyChanged("IconId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InstallCount {
            get {
                return this.InstallCountField;
            }
            set {
                if ((this.InstallCountField.Equals(value) != true)) {
                    this.InstallCountField = value;
                    this.RaisePropertyChanged("InstallCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IsFeatured {
            get {
                return this.IsFeaturedField;
            }
            set {
                if ((this.IsFeaturedField.Equals(value) != true)) {
                    this.IsFeaturedField = value;
                    this.RaisePropertyChanged("IsFeatured");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<CurseServices.AddOnService.AddOnFile> LatestFiles {
            get {
                return this.LatestFilesField;
            }
            set {
                if ((object.ReferenceEquals(this.LatestFilesField, value) != true)) {
                    this.LatestFilesField = value;
                    this.RaisePropertyChanged("LatestFiles");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Likes {
            get {
                return this.LikesField;
            }
            set {
                if ((this.LikesField.Equals(value) != true)) {
                    this.LikesField = value;
                    this.RaisePropertyChanged("Likes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CurseServices.AddOnService.PackageTypes PackageType {
            get {
                return this.PackageTypeField;
            }
            set {
                if ((this.PackageTypeField.Equals(value) != true)) {
                    this.PackageTypeField = value;
                    this.RaisePropertyChanged("PackageType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double PopularityScore {
            get {
                return this.PopularityScoreField;
            }
            set {
                if ((this.PopularityScoreField.Equals(value) != true)) {
                    this.PopularityScoreField = value;
                    this.RaisePropertyChanged("PopularityScore");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrimaryAuthorName {
            get {
                return this.PrimaryAuthorNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PrimaryAuthorNameField, value) != true)) {
                    this.PrimaryAuthorNameField = value;
                    this.RaisePropertyChanged("PrimaryAuthorName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrimaryCategoryAvatarUrl {
            get {
                return this.PrimaryCategoryAvatarUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.PrimaryCategoryAvatarUrlField, value) != true)) {
                    this.PrimaryCategoryAvatarUrlField = value;
                    this.RaisePropertyChanged("PrimaryCategoryAvatarUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PrimaryCategoryId {
            get {
                return this.PrimaryCategoryIdField;
            }
            set {
                if ((this.PrimaryCategoryIdField.Equals(value) != true)) {
                    this.PrimaryCategoryIdField = value;
                    this.RaisePropertyChanged("PrimaryCategoryId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrimaryCategoryName {
            get {
                return this.PrimaryCategoryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PrimaryCategoryNameField, value) != true)) {
                    this.PrimaryCategoryNameField = value;
                    this.RaisePropertyChanged("PrimaryCategoryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Rating {
            get {
                return this.RatingField;
            }
            set {
                if ((this.RatingField.Equals(value) != true)) {
                    this.RatingField = value;
                    this.RaisePropertyChanged("Rating");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CurseServices.AddOnService.ProjectStage Stage {
            get {
                return this.StageField;
            }
            set {
                if ((this.StageField.Equals(value) != true)) {
                    this.StageField = value;
                    this.RaisePropertyChanged("Stage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CurseServices.AddOnService.ProjectStatus Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Summary {
            get {
                return this.SummaryField;
            }
            set {
                if ((object.ReferenceEquals(this.SummaryField, value) != true)) {
                    this.SummaryField = value;
                    this.RaisePropertyChanged("Summary");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WebSiteURL {
            get {
                return this.WebSiteURLField;
            }
            set {
                if ((object.ReferenceEquals(this.WebSiteURLField, value) != true)) {
                    this.WebSiteURLField = value;
                    this.RaisePropertyChanged("WebSiteURL");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CategorySection", Namespace="Curse.AddOns")]
    [System.SerializableAttribute()]
    public partial class CategorySection : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExtraIncludePatternField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GameIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InitialInclusionPatternField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CurseServices.AddOnService.PackageTypes PackageTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PathField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExtraIncludePattern {
            get {
                return this.ExtraIncludePatternField;
            }
            set {
                if ((object.ReferenceEquals(this.ExtraIncludePatternField, value) != true)) {
                    this.ExtraIncludePatternField = value;
                    this.RaisePropertyChanged("ExtraIncludePattern");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GameID {
            get {
                return this.GameIDField;
            }
            set {
                if ((this.GameIDField.Equals(value) != true)) {
                    this.GameIDField = value;
                    this.RaisePropertyChanged("GameID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InitialInclusionPattern {
            get {
                return this.InitialInclusionPatternField;
            }
            set {
                if ((object.ReferenceEquals(this.InitialInclusionPatternField, value) != true)) {
                    this.InitialInclusionPatternField = value;
                    this.RaisePropertyChanged("InitialInclusionPattern");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CurseServices.AddOnService.PackageTypes PackageType {
            get {
                return this.PackageTypeField;
            }
            set {
                if ((this.PackageTypeField.Equals(value) != true)) {
                    this.PackageTypeField = value;
                    this.RaisePropertyChanged("PackageType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Path {
            get {
                return this.PathField;
            }
            set {
                if ((object.ReferenceEquals(this.PathField, value) != true)) {
                    this.PathField = value;
                    this.RaisePropertyChanged("Path");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AddOnAttachment", Namespace="Curse.AddOns")]
    [System.SerializableAttribute()]
    public partial class AddOnAttachment : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsDefaultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ThumbnailUrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UrlField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDefault {
            get {
                return this.IsDefaultField;
            }
            set {
                if ((this.IsDefaultField.Equals(value) != true)) {
                    this.IsDefaultField = value;
                    this.RaisePropertyChanged("IsDefault");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ThumbnailUrl {
            get {
                return this.ThumbnailUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.ThumbnailUrlField, value) != true)) {
                    this.ThumbnailUrlField = value;
                    this.RaisePropertyChanged("ThumbnailUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Url {
            get {
                return this.UrlField;
            }
            set {
                if ((object.ReferenceEquals(this.UrlField, value) != true)) {
                    this.UrlField = value;
                    this.RaisePropertyChanged("Url");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AddOnAuthor", Namespace="Curse.AddOns")]
    [System.SerializableAttribute()]
    public partial class AddOnAuthor : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UrlField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Url {
            get {
                return this.UrlField;
            }
            set {
                if ((object.ReferenceEquals(this.UrlField, value) != true)) {
                    this.UrlField = value;
                    this.RaisePropertyChanged("Url");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AddOnCategory", Namespace="Curse.AddOns")]
    [System.SerializableAttribute()]
    public partial class AddOnCategory : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string URLField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string URL {
            get {
                return this.URLField;
            }
            set {
                if ((object.ReferenceEquals(this.URLField, value) != true)) {
                    this.URLField = value;
                    this.RaisePropertyChanged("URL");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GameVersionLatestFile", Namespace="http://schemas.datacontract.org/2004/07/Curse.AddOns")]
    [System.SerializableAttribute()]
    public partial class GameVersionLatestFile : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CurseServices.AddOnService.FileType FileTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GameVesionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProjectFileIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProjectFileNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CurseServices.AddOnService.FileType FileType {
            get {
                return this.FileTypeField;
            }
            set {
                if ((this.FileTypeField.Equals(value) != true)) {
                    this.FileTypeField = value;
                    this.RaisePropertyChanged("FileType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GameVesion {
            get {
                return this.GameVesionField;
            }
            set {
                if ((object.ReferenceEquals(this.GameVesionField, value) != true)) {
                    this.GameVesionField = value;
                    this.RaisePropertyChanged("GameVesion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProjectFileID {
            get {
                return this.ProjectFileIDField;
            }
            set {
                if ((this.ProjectFileIDField.Equals(value) != true)) {
                    this.ProjectFileIDField = value;
                    this.RaisePropertyChanged("ProjectFileID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProjectFileName {
            get {
                return this.ProjectFileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProjectFileNameField, value) != true)) {
                    this.ProjectFileNameField = value;
                    this.RaisePropertyChanged("ProjectFileName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AddOnFile", Namespace="Curse.AddOns")]
    [System.SerializableAttribute()]
    public partial class AddOnFile : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AlternateFileIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<CurseServices.AddOnService.AddOnFileDependency> DependenciesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DownloadURLField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime FileDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameOnDiskField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CurseServices.AddOnService.FileStatus FileStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<string> GameVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsAlternateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsAvailableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<CurseServices.AddOnService.AddOnModule> ModulesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long PackageFingerprintField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CurseServices.AddOnService.FileType ReleaseTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AlternateFileId {
            get {
                return this.AlternateFileIdField;
            }
            set {
                if ((this.AlternateFileIdField.Equals(value) != true)) {
                    this.AlternateFileIdField = value;
                    this.RaisePropertyChanged("AlternateFileId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<CurseServices.AddOnService.AddOnFileDependency> Dependencies {
            get {
                return this.DependenciesField;
            }
            set {
                if ((object.ReferenceEquals(this.DependenciesField, value) != true)) {
                    this.DependenciesField = value;
                    this.RaisePropertyChanged("Dependencies");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DownloadURL {
            get {
                return this.DownloadURLField;
            }
            set {
                if ((object.ReferenceEquals(this.DownloadURLField, value) != true)) {
                    this.DownloadURLField = value;
                    this.RaisePropertyChanged("DownloadURL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime FileDate {
            get {
                return this.FileDateField;
            }
            set {
                if ((this.FileDateField.Equals(value) != true)) {
                    this.FileDateField = value;
                    this.RaisePropertyChanged("FileDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileNameOnDisk {
            get {
                return this.FileNameOnDiskField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameOnDiskField, value) != true)) {
                    this.FileNameOnDiskField = value;
                    this.RaisePropertyChanged("FileNameOnDisk");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CurseServices.AddOnService.FileStatus FileStatus {
            get {
                return this.FileStatusField;
            }
            set {
                if ((this.FileStatusField.Equals(value) != true)) {
                    this.FileStatusField = value;
                    this.RaisePropertyChanged("FileStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<string> GameVersion {
            get {
                return this.GameVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.GameVersionField, value) != true)) {
                    this.GameVersionField = value;
                    this.RaisePropertyChanged("GameVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAlternate {
            get {
                return this.IsAlternateField;
            }
            set {
                if ((this.IsAlternateField.Equals(value) != true)) {
                    this.IsAlternateField = value;
                    this.RaisePropertyChanged("IsAlternate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAvailable {
            get {
                return this.IsAvailableField;
            }
            set {
                if ((this.IsAvailableField.Equals(value) != true)) {
                    this.IsAvailableField = value;
                    this.RaisePropertyChanged("IsAvailable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<CurseServices.AddOnService.AddOnModule> Modules {
            get {
                return this.ModulesField;
            }
            set {
                if ((object.ReferenceEquals(this.ModulesField, value) != true)) {
                    this.ModulesField = value;
                    this.RaisePropertyChanged("Modules");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long PackageFingerprint {
            get {
                return this.PackageFingerprintField;
            }
            set {
                if ((this.PackageFingerprintField.Equals(value) != true)) {
                    this.PackageFingerprintField = value;
                    this.RaisePropertyChanged("PackageFingerprint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CurseServices.AddOnService.FileType ReleaseType {
            get {
                return this.ReleaseTypeField;
            }
            set {
                if ((this.ReleaseTypeField.Equals(value) != true)) {
                    this.ReleaseTypeField = value;
                    this.RaisePropertyChanged("ReleaseType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PackageTypes", Namespace="http://schemas.datacontract.org/2004/07/Curse.AddOns")]
    public enum PackageTypes : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Folder = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Ctoc = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SingleFile = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Cmod2 = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ModPack = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Mod = 6,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProjectStage", Namespace="http://schemas.datacontract.org/2004/07/Curse.AddOns")]
    public enum ProjectStage : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Alpha = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Beta = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Deleted = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Inactive = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Mature = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Planning = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Release = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Abandoned = 8,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProjectStatus", Namespace="http://schemas.datacontract.org/2004/07/Curse.AddOns")]
    public enum ProjectStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Normal = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Hidden = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Deleted = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FileType", Namespace="http://schemas.datacontract.org/2004/07/Curse.AddOns")]
    public enum FileType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Release = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Beta = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Alpha = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AddOnFileDependency", Namespace="Curse.AddOns")]
    [System.SerializableAttribute()]
    public partial class AddOnFileDependency : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AddOnIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CurseServices.AddOnService.DependencyType TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AddOnId {
            get {
                return this.AddOnIdField;
            }
            set {
                if ((this.AddOnIdField.Equals(value) != true)) {
                    this.AddOnIdField = value;
                    this.RaisePropertyChanged("AddOnId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CurseServices.AddOnService.DependencyType Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FileStatus", Namespace="http://schemas.datacontract.org/2004/07/Curse.AddOns")]
    public enum FileStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Normal = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SemiNormal = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Reported = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Malformed = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Locked = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvalidLayout = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Hidden = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NeedsApproval = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Deleted = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UnderReview = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MalwareDetected = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WaitingOnProject = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ClientOnly = 13,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AddOnModule", Namespace="Curse.AddOns")]
    [System.SerializableAttribute()]
    public partial class AddOnModule : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long FingerprintField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FoldernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Fingerprint {
            get {
                return this.FingerprintField;
            }
            set {
                if ((this.FingerprintField.Equals(value) != true)) {
                    this.FingerprintField = value;
                    this.RaisePropertyChanged("Fingerprint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Foldername {
            get {
                return this.FoldernameField;
            }
            set {
                if ((object.ReferenceEquals(this.FoldernameField, value) != true)) {
                    this.FoldernameField = value;
                    this.RaisePropertyChanged("Foldername");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DependencyType", Namespace="http://schemas.datacontract.org/2004/07/Curse.AddOns")]
    public enum DependencyType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Required = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Optional = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Embedded = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RepositoryMatch", Namespace="http://schemas.datacontract.org/2004/07/Curse.AddOns")]
    [System.SerializableAttribute()]
    public partial class RepositoryMatch : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<CurseServices.AddOnService.AddOnFile> LatestFilesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<CurseServices.AddOnService.AddOnFile> LatestFiles {
            get {
                return this.LatestFilesField;
            }
            set {
                if ((object.ReferenceEquals(this.LatestFilesField, value) != true)) {
                    this.LatestFilesField = value;
                    this.RaisePropertyChanged("LatestFiles");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FingerprintMatchResult", Namespace="Curse.AddOns")]
    [System.SerializableAttribute()]
    public partial class FingerprintMatchResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<CurseServices.AddOnService.FingerprintMatch> ExactMatchesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsCacheBuiltField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<CurseServices.AddOnService.FingerprintMatch> PartialMatchesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<CurseServices.AddOnService.FingerprintMatch> ExactMatches {
            get {
                return this.ExactMatchesField;
            }
            set {
                if ((object.ReferenceEquals(this.ExactMatchesField, value) != true)) {
                    this.ExactMatchesField = value;
                    this.RaisePropertyChanged("ExactMatches");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsCacheBuilt {
            get {
                return this.IsCacheBuiltField;
            }
            set {
                if ((this.IsCacheBuiltField.Equals(value) != true)) {
                    this.IsCacheBuiltField = value;
                    this.RaisePropertyChanged("IsCacheBuilt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<CurseServices.AddOnService.FingerprintMatch> PartialMatches {
            get {
                return this.PartialMatchesField;
            }
            set {
                if ((object.ReferenceEquals(this.PartialMatchesField, value) != true)) {
                    this.PartialMatchesField = value;
                    this.RaisePropertyChanged("PartialMatches");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FingerprintMatch", Namespace="Curse.AddOns")]
    [System.SerializableAttribute()]
    public partial class FingerprintMatch : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CurseServices.AddOnService.AddOnFile FileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<CurseServices.AddOnService.AddOnFile> LatestFilesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CurseServices.AddOnService.AddOnFile File {
            get {
                return this.FileField;
            }
            set {
                if ((object.ReferenceEquals(this.FileField, value) != true)) {
                    this.FileField = value;
                    this.RaisePropertyChanged("File");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<CurseServices.AddOnService.AddOnFile> LatestFiles {
            get {
                return this.LatestFilesField;
            }
            set {
                if ((object.ReferenceEquals(this.LatestFilesField, value) != true)) {
                    this.LatestFilesField = value;
                    this.RaisePropertyChanged("LatestFiles");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FolderFingerprint", Namespace="http://schemas.datacontract.org/2004/07/Curse.AddOns")]
    [System.SerializableAttribute()]
    public partial class FolderFingerprint : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<long> FingerprintsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FoldernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<long> Fingerprints {
            get {
                return this.FingerprintsField;
            }
            set {
                if ((object.ReferenceEquals(this.FingerprintsField, value) != true)) {
                    this.FingerprintsField = value;
                    this.RaisePropertyChanged("Fingerprints");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Foldername {
            get {
                return this.FoldernameField;
            }
            set {
                if ((object.ReferenceEquals(this.FoldernameField, value) != true)) {
                    this.FoldernameField = value;
                    this.RaisePropertyChanged("Foldername");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FuzzyMatch", Namespace="Curse.AddOns")]
    [System.SerializableAttribute()]
    public partial class FuzzyMatch : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CurseServices.AddOnService.AddOnFile FileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<CurseServices.AddOnService.AddOnFile> LatestFilesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CurseServices.AddOnService.AddOnFile File {
            get {
                return this.FileField;
            }
            set {
                if ((object.ReferenceEquals(this.FileField, value) != true)) {
                    this.FileField = value;
                    this.RaisePropertyChanged("File");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<CurseServices.AddOnService.AddOnFile> LatestFiles {
            get {
                return this.LatestFilesField;
            }
            set {
                if ((object.ReferenceEquals(this.LatestFilesField, value) != true)) {
                    this.LatestFilesField = value;
                    this.RaisePropertyChanged("LatestFiles");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DownloadToken", Namespace="Curse.AddOns")]
    [System.SerializableAttribute()]
    public partial class DownloadToken : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IPAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimestampField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IPAddress {
            get {
                return this.IPAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.IPAddressField, value) != true)) {
                    this.IPAddressField = value;
                    this.RaisePropertyChanged("IPAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Timestamp {
            get {
                return this.TimestampField;
            }
            set {
                if ((this.TimestampField.Equals(value) != true)) {
                    this.TimestampField = value;
                    this.RaisePropertyChanged("Timestamp");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceResponseOfArrayOfSyncedGameInstanceeheogrl4", Namespace="http://schemas.datacontract.org/2004/07/Curse.ClientService.Models")]
    [System.SerializableAttribute()]
    public partial class ServiceResponseOfArrayOfSyncedGameInstanceeheogrl4 : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CurseServices.AddOnService.ServiceResponseStatus StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<CurseServices.AddOnService.SyncedGameInstance> ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CurseServices.AddOnService.ServiceResponseStatus Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<CurseServices.AddOnService.SyncedGameInstance> Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceResponseStatus", Namespace="http://schemas.datacontract.org/2004/07/Curse.ClientService.Models")]
    public enum ServiceResponseStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Successful = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UnknownException = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        JoinSyncGroup_GroupNotFound = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        JoinSyncGroup_AlreadyInGroup = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CreateSyncGroup_GroupAlreadyExists = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LeaveSyncGroup_GroupNotFound = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LeaveSyncGroup_ComputerNotFound = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SaveSyncSnapshot_GroupNotFound = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SaveSyncTransactions_GroupNotFound = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DeleteSavedGame_SavedGameNotFound = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DeleteSavedGameRevision_SavedGameNotFound = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DeleteSavedGameRevision_RevisionNotFound = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SetSavedGameStatus_SavedGameNotFound = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SetSavedGameName_SavedGameNotFound = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SetSavedGameDescription_SavedGameNotFound = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SetSavedGameDefaultRevision_SavedGameNotFound = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SetSavedGameDefaultRevision_RevisionNotFound = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SetSavedGameFavoriteRevision_SavedGameNotFound = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SetSavedGameFavoriteRevision_RevisionNotFound = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UserOrSlotsAvailable_NoCloudSlotsAvailable = 20,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SyncedGameInstance", Namespace="http://schemas.datacontract.org/2004/07/Curse.ClientService.Models")]
    [System.SerializableAttribute()]
    public partial class SyncedGameInstance : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<CurseServices.AddOnService.SyncedAddon> AddonsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<CurseServices.AddOnService.SyncedComputer> ComputersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GameIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InstanceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InstanceNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastBackupDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long LastBackupFingerprintField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long LastBackupScreenHeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long LastBackupScreenWidthField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<CurseServices.AddOnService.SyncedAddon> Addons {
            get {
                return this.AddonsField;
            }
            set {
                if ((object.ReferenceEquals(this.AddonsField, value) != true)) {
                    this.AddonsField = value;
                    this.RaisePropertyChanged("Addons");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<CurseServices.AddOnService.SyncedComputer> Computers {
            get {
                return this.ComputersField;
            }
            set {
                if ((object.ReferenceEquals(this.ComputersField, value) != true)) {
                    this.ComputersField = value;
                    this.RaisePropertyChanged("Computers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GameID {
            get {
                return this.GameIDField;
            }
            set {
                if ((this.GameIDField.Equals(value) != true)) {
                    this.GameIDField = value;
                    this.RaisePropertyChanged("GameID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InstanceID {
            get {
                return this.InstanceIDField;
            }
            set {
                if ((this.InstanceIDField.Equals(value) != true)) {
                    this.InstanceIDField = value;
                    this.RaisePropertyChanged("InstanceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InstanceName {
            get {
                return this.InstanceNameField;
            }
            set {
                if ((object.ReferenceEquals(this.InstanceNameField, value) != true)) {
                    this.InstanceNameField = value;
                    this.RaisePropertyChanged("InstanceName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastBackupDate {
            get {
                return this.LastBackupDateField;
            }
            set {
                if ((this.LastBackupDateField.Equals(value) != true)) {
                    this.LastBackupDateField = value;
                    this.RaisePropertyChanged("LastBackupDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long LastBackupFingerprint {
            get {
                return this.LastBackupFingerprintField;
            }
            set {
                if ((this.LastBackupFingerprintField.Equals(value) != true)) {
                    this.LastBackupFingerprintField = value;
                    this.RaisePropertyChanged("LastBackupFingerprint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long LastBackupScreenHeight {
            get {
                return this.LastBackupScreenHeightField;
            }
            set {
                if ((this.LastBackupScreenHeightField.Equals(value) != true)) {
                    this.LastBackupScreenHeightField = value;
                    this.RaisePropertyChanged("LastBackupScreenHeight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long LastBackupScreenWidth {
            get {
                return this.LastBackupScreenWidthField;
            }
            set {
                if ((this.LastBackupScreenWidthField.Equals(value) != true)) {
                    this.LastBackupScreenWidthField = value;
                    this.RaisePropertyChanged("LastBackupScreenWidth");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SyncedAddon", Namespace="http://schemas.datacontract.org/2004/07/Curse.ClientService.Models")]
    [System.SerializableAttribute()]
    public partial class SyncedAddon : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AddonIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FileIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AddonID {
            get {
                return this.AddonIDField;
            }
            set {
                if ((this.AddonIDField.Equals(value) != true)) {
                    this.AddonIDField = value;
                    this.RaisePropertyChanged("AddonID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FileID {
            get {
                return this.FileIDField;
            }
            set {
                if ((this.FileIDField.Equals(value) != true)) {
                    this.FileIDField = value;
                    this.RaisePropertyChanged("FileID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SyncedComputer", Namespace="http://schemas.datacontract.org/2004/07/Curse.ClientService.Models")]
    [System.SerializableAttribute()]
    public partial class SyncedComputer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ComputerIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ComputerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InstanceGuidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InstanceLabelField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ComputerID {
            get {
                return this.ComputerIDField;
            }
            set {
                if ((this.ComputerIDField.Equals(value) != true)) {
                    this.ComputerIDField = value;
                    this.RaisePropertyChanged("ComputerID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ComputerName {
            get {
                return this.ComputerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ComputerNameField, value) != true)) {
                    this.ComputerNameField = value;
                    this.RaisePropertyChanged("ComputerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InstanceGuid {
            get {
                return this.InstanceGuidField;
            }
            set {
                if ((object.ReferenceEquals(this.InstanceGuidField, value) != true)) {
                    this.InstanceGuidField = value;
                    this.RaisePropertyChanged("InstanceGuid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InstanceLabel {
            get {
                return this.InstanceLabelField;
            }
            set {
                if ((object.ReferenceEquals(this.InstanceLabelField, value) != true)) {
                    this.InstanceLabelField = value;
                    this.RaisePropertyChanged("InstanceLabel");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceResponseOfSyncedGameInstanceeheogrl4", Namespace="http://schemas.datacontract.org/2004/07/Curse.ClientService.Models")]
    [System.SerializableAttribute()]
    public partial class ServiceResponseOfSyncedGameInstanceeheogrl4 : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CurseServices.AddOnService.ServiceResponseStatus StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CurseServices.AddOnService.SyncedGameInstance ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CurseServices.AddOnService.ServiceResponseStatus Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CurseServices.AddOnService.SyncedGameInstance Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceResponse", Namespace="http://schemas.datacontract.org/2004/07/Curse.ClientService.Models")]
    [System.SerializableAttribute()]
    public partial class ServiceResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CurseServices.AddOnService.ServiceResponseStatus StatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CurseServices.AddOnService.ServiceResponseStatus Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SyncTransaction", Namespace="http://schemas.datacontract.org/2004/07/Curse.ClientService.Models")]
    [System.SerializableAttribute()]
    public partial class SyncTransaction : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AddonIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FileIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CurseServices.AddOnService.SyncTransactionType TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AddonID {
            get {
                return this.AddonIDField;
            }
            set {
                if ((this.AddonIDField.Equals(value) != true)) {
                    this.AddonIDField = value;
                    this.RaisePropertyChanged("AddonID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FileID {
            get {
                return this.FileIDField;
            }
            set {
                if ((this.FileIDField.Equals(value) != true)) {
                    this.FileIDField = value;
                    this.RaisePropertyChanged("FileID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CurseServices.AddOnService.SyncTransactionType Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SyncTransactionType", Namespace="http://schemas.datacontract.org/2004/07/Curse.ClientService.Models")]
    public enum SyncTransactionType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Install = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Delete = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Update = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceResponseOfArrayOfSavedGameeheogrl4", Namespace="http://schemas.datacontract.org/2004/07/Curse.ClientService.Models")]
    [System.SerializableAttribute()]
    public partial class ServiceResponseOfArrayOfSavedGameeheogrl4 : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CurseServices.AddOnService.ServiceResponseStatus StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<CurseServices.AddOnService.SavedGame> ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CurseServices.AddOnService.ServiceResponseStatus Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<CurseServices.AddOnService.SavedGame> Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SavedGame", Namespace="http://schemas.datacontract.org/2004/07/Curse.ClientService.Models")]
    [System.SerializableAttribute()]
    public partial class SavedGame : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateCreatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateModifiedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DefaultRevisionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GameIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<CurseServices.AddOnService.SavedGameRevision> SavedGameRevisionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CurseServices.AddOnService.ESavedGameStatus StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateCreated {
            get {
                return this.DateCreatedField;
            }
            set {
                if ((this.DateCreatedField.Equals(value) != true)) {
                    this.DateCreatedField = value;
                    this.RaisePropertyChanged("DateCreated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateModified {
            get {
                return this.DateModifiedField;
            }
            set {
                if ((this.DateModifiedField.Equals(value) != true)) {
                    this.DateModifiedField = value;
                    this.RaisePropertyChanged("DateModified");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DefaultRevisionID {
            get {
                return this.DefaultRevisionIDField;
            }
            set {
                if ((this.DefaultRevisionIDField.Equals(value) != true)) {
                    this.DefaultRevisionIDField = value;
                    this.RaisePropertyChanged("DefaultRevisionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GameID {
            get {
                return this.GameIDField;
            }
            set {
                if ((this.GameIDField.Equals(value) != true)) {
                    this.GameIDField = value;
                    this.RaisePropertyChanged("GameID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<CurseServices.AddOnService.SavedGameRevision> SavedGameRevisions {
            get {
                return this.SavedGameRevisionsField;
            }
            set {
                if ((object.ReferenceEquals(this.SavedGameRevisionsField, value) != true)) {
                    this.SavedGameRevisionsField = value;
                    this.RaisePropertyChanged("SavedGameRevisions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CurseServices.AddOnService.ESavedGameStatus Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SavedGameRevision", Namespace="http://schemas.datacontract.org/2004/07/Curse.ClientService.Models")]
    [System.SerializableAttribute()]
    public partial class SavedGameRevision : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ComputerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateCreatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DownloadUrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long FileSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long FingerprintField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SavedGameIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CurseServices.AddOnService.SavedGameRevisionStatus StatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ComputerName {
            get {
                return this.ComputerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ComputerNameField, value) != true)) {
                    this.ComputerNameField = value;
                    this.RaisePropertyChanged("ComputerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateCreated {
            get {
                return this.DateCreatedField;
            }
            set {
                if ((this.DateCreatedField.Equals(value) != true)) {
                    this.DateCreatedField = value;
                    this.RaisePropertyChanged("DateCreated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DownloadUrl {
            get {
                return this.DownloadUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.DownloadUrlField, value) != true)) {
                    this.DownloadUrlField = value;
                    this.RaisePropertyChanged("DownloadUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long FileSize {
            get {
                return this.FileSizeField;
            }
            set {
                if ((this.FileSizeField.Equals(value) != true)) {
                    this.FileSizeField = value;
                    this.RaisePropertyChanged("FileSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Fingerprint {
            get {
                return this.FingerprintField;
            }
            set {
                if ((this.FingerprintField.Equals(value) != true)) {
                    this.FingerprintField = value;
                    this.RaisePropertyChanged("Fingerprint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SavedGameID {
            get {
                return this.SavedGameIDField;
            }
            set {
                if ((this.SavedGameIDField.Equals(value) != true)) {
                    this.SavedGameIDField = value;
                    this.RaisePropertyChanged("SavedGameID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CurseServices.AddOnService.SavedGameRevisionStatus Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ESavedGameStatus", Namespace="http://schemas.datacontract.org/2004/07/Curse.ClientService.Models")]
    public enum ESavedGameStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Private = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Public = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SavedGameRevisionStatus", Namespace="http://schemas.datacontract.org/2004/07/Curse.ClientService.Models")]
    public enum SavedGameRevisionStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Active = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Deleted = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceResponseOfSavedGameConstraintseheogrl4", Namespace="http://schemas.datacontract.org/2004/07/Curse.ClientService.Models")]
    [System.SerializableAttribute()]
    public partial class ServiceResponseOfSavedGameConstraintseheogrl4 : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CurseServices.AddOnService.ServiceResponseStatus StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CurseServices.AddOnService.SavedGameConstraints ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CurseServices.AddOnService.ServiceResponseStatus Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CurseServices.AddOnService.SavedGameConstraints Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SavedGameConstraints", Namespace="http://schemas.datacontract.org/2004/07/Curse.ClientService.Models")]
    [System.SerializableAttribute()]
    public partial class SavedGameConstraints : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaxRevionCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaxSavedGameCountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaxRevionCount {
            get {
                return this.MaxRevionCountField;
            }
            set {
                if ((this.MaxRevionCountField.Equals(value) != true)) {
                    this.MaxRevionCountField = value;
                    this.RaisePropertyChanged("MaxRevionCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaxSavedGameCount {
            get {
                return this.MaxSavedGameCountField;
            }
            set {
                if ((this.MaxSavedGameCountField.Equals(value) != true)) {
                    this.MaxSavedGameCountField = value;
                    this.RaisePropertyChanged("MaxSavedGameCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceResponseOfESavedGameRestrictionLeveleheogrl4", Namespace="http://schemas.datacontract.org/2004/07/Curse.ClientService.Models")]
    [System.SerializableAttribute()]
    public partial class ServiceResponseOfESavedGameRestrictionLeveleheogrl4 : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CurseServices.AddOnService.ServiceResponseStatus StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CurseServices.AddOnService.ESavedGameRestrictionLevel ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CurseServices.AddOnService.ServiceResponseStatus Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CurseServices.AddOnService.ESavedGameRestrictionLevel Value {
            get {
                return this.ValueField;
            }
            set {
                if ((this.ValueField.Equals(value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ESavedGameRestrictionLevel", Namespace="http://schemas.datacontract.org/2004/07/Curse.ClientService.Models")]
    public enum ESavedGameRestrictionLevel : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Disabled = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PremiumOnly = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AllUsers = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://addonservice.curse.com/", ConfigurationName="AddOnService.IAddOnService")]
    public interface IAddOnService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://addonservice.curse.com/IAddOnService/GetAddOn", ReplyAction="http://addonservice.curse.com/IAddOnService/GetAddOnResponse")]
        CurseServices.AddOnService.AddOn GetAddOn(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://addonservice.curse.com/IAddOnService/GetAddOn", ReplyAction="http://addonservice.curse.com/IAddOnService/GetAddOnResponse")]
        System.Threading.Tasks.Task<CurseServices.AddOnService.AddOn> GetAddOnAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://addonservice.curse.com/IAddOnService/GetRepositoryMatchFromSlug", ReplyAction="http://addonservice.curse.com/IAddOnService/GetRepositoryMatchFromSlugResponse")]
        CurseServices.AddOnService.RepositoryMatch GetRepositoryMatchFromSlug(string gameSlug, string addonSlug);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://addonservice.curse.com/IAddOnService/GetRepositoryMatchFromSlug", ReplyAction="http://addonservice.curse.com/IAddOnService/GetRepositoryMatchFromSlugResponse")]
        System.Threading.Tasks.Task<CurseServices.AddOnService.RepositoryMatch> GetRepositoryMatchFromSlugAsync(string gameSlug, string addonSlug);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://addonservice.curse.com/IAddOnService/GetChangeLog", ReplyAction="http://addonservice.curse.com/IAddOnService/GetChangeLogResponse")]
        string GetChangeLog(int addonID, int fileID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://addonservice.curse.com/IAddOnService/GetChangeLog", ReplyAction="http://addonservice.curse.com/IAddOnService/GetChangeLogResponse")]
        System.Threading.Tasks.Task<string> GetChangeLogAsync(int addonID, int fileID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://addonservice.curse.com/IAddOnService/v2GetChangeLog", ReplyAction="http://addonservice.curse.com/IAddOnService/v2GetChangeLogResponse")]
        string v2GetChangeLog(int addonID, int fileID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://addonservice.curse.com/IAddOnService/v2GetChangeLog", ReplyAction="http://addonservice.curse.com/IAddOnService/v2GetChangeLogResponse")]
        System.Threading.Tasks.Task<string> v2GetChangeLogAsync(int addonID, int fileID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://addonservice.curse.com/IAddOnService/GetAddOnDescription", ReplyAction="http://addonservice.curse.com/IAddOnService/GetAddOnDescriptionResponse")]
        string GetAddOnDescription(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://addonservice.curse.com/IAddOnService/GetAddOnDescription", ReplyAction="http://addonservice.curse.com/IAddOnService/GetAddOnDescriptionResponse")]
        System.Threading.Tasks.Task<string> GetAddOnDescriptionAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://addonservice.curse.com/IAddOnService/v2GetAddOnDescription", ReplyAction="http://addonservice.curse.com/IAddOnService/v2GetAddOnDescriptionResponse")]
        string v2GetAddOnDescription(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://addonservice.curse.com/IAddOnService/v2GetAddOnDescription", ReplyAction="http://addonservice.curse.com/IAddOnService/v2GetAddOnDescriptionResponse")]
        System.Threading.Tasks.Task<string> v2GetAddOnDescriptionAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://addonservice.curse.com/IAddOnService/GetAddOnFile", ReplyAction="http://addonservice.curse.com/IAddOnService/GetAddOnFileResponse")]
        CurseServices.AddOnService.AddOnFile GetAddOnFile(int addonID, int fileID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://addonservice.curse.com/IAddOnService/GetAddOnFile", ReplyAction="http://addonservice.curse.com/IAddOnService/GetAddOnFileResponse")]
        System.Threading.Tasks.Task<CurseServices.AddOnService.AddOnFile> GetAddOnFileAsync(int addonID, int fileID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://addonservice.curse.com/IAddOnService/GetAddOns", ReplyAction="http://addonservice.curse.com/IAddOnService/GetAddOnsResponse")]
        System.Collections.Generic.List<CurseServices.AddOnService.AddOn> GetAddOns(System.Collections.Generic.List<int> ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://addonservice.curse.com/IAddOnService/GetAddOns", ReplyAction="http://addonservice.curse.com/IAddOnService/GetAddOnsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<CurseServices.AddOnService.AddOn>> GetAddOnsAsync(System.Collections.Generic.List<int> ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://addonservice.curse.com/IAddOnService/v2GetAddOns", ReplyAction="http://addonservice.curse.com/IAddOnService/v2GetAddOnsResponse")]
        System.Collections.Generic.List<CurseServices.AddOnService.AddOn> v2GetAddOns(System.Collections.Generic.List<int> ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://addonservice.curse.com/IAddOnService/v2GetAddOns", ReplyAction="http://addonservice.curse.com/IAddOnService/v2GetAddOnsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<CurseServices.AddOnService.AddOn>> v2GetAddOnsAsync(System.Collections.Generic.List<int> ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://addonservice.curse.com/IAddOnService/GetFingerprintMatches", ReplyAction="http://addonservice.curse.com/IAddOnService/GetFingerprintMatchesResponse")]
        CurseServices.AddOnService.FingerprintMatchResult GetFingerprintMatches(System.Collections.Generic.List<long> fingerprints);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://addonservice.curse.com/IAddOnService/GetFingerprintMatches", ReplyAction="http://addonservice.curse.com/IAddOnService/GetFingerprintMatchesResponse")]
        System.Threading.Tasks.Task<CurseServices.AddOnService.FingerprintMatchResult> GetFingerprintMatchesAsync(System.Collections.Generic.List<long> fingerprints);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://addonservice.curse.com/IAddOnService/v2GetFingerprintMatches", ReplyAction="http://addonservice.curse.com/IAddOnService/v2GetFingerprintMatchesResponse")]
        CurseServices.AddOnService.FingerprintMatchResult v2GetFingerprintMatches(System.Collections.Generic.List<long> fingerprints);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://addonservice.curse.com/IAddOnService/v2GetFingerprintMatches", ReplyAction="http://addonservice.curse.com/IAddOnService/v2GetFingerprintMatchesResponse")]
        System.Threading.Tasks.Task<CurseServices.AddOnService.FingerprintMatchResult> v2GetFingerprintMatchesAsync(System.Collections.Generic.List<long> fingerprints);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://addonservice.curse.com/IAddOnService/GetFuzzyMatches", ReplyAction="http://addonservice.curse.com/IAddOnService/GetFuzzyMatchesResponse")]
        System.Collections.Generic.List<CurseServices.AddOnService.FuzzyMatch> GetFuzzyMatches(int gameID, System.Collections.Generic.List<CurseServices.AddOnService.FolderFingerprint> folderFingerprints);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://addonservice.curse.com/IAddOnService/GetFuzzyMatches", ReplyAction="http://addonservice.curse.com/IAddOnService/GetFuzzyMatchesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<CurseServices.AddOnService.FuzzyMatch>> GetFuzzyMatchesAsync(int gameID, System.Collections.Generic.List<CurseServices.AddOnService.FolderFingerprint> folderFingerprints);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://addonservice.curse.com/IAddOnService/GetDownloadToken", ReplyAction="http://addonservice.curse.com/IAddOnService/GetDownloadTokenResponse")]
        CurseServices.AddOnService.DownloadToken GetDownloadToken(int fileID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://addonservice.curse.com/IAddOnService/GetDownloadToken", ReplyAction="http://addonservice.curse.com/IAddOnService/GetDownloadTokenResponse")]
        System.Threading.Tasks.Task<CurseServices.AddOnService.DownloadToken> GetDownloadTokenAsync(int fileID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://addonservice.curse.com/IAddOnService/GetSecureDownloadToken", ReplyAction="http://addonservice.curse.com/IAddOnService/GetSecureDownloadTokenResponse")]
        CurseServices.AddOnService.DownloadToken GetSecureDownloadToken(int fileID, int userID, bool hasPremium, int subscriptionToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://addonservice.curse.com/IAddOnService/GetSecureDownloadToken", ReplyAction="http://addonservice.curse.com/IAddOnService/GetSecureDownloadTokenResponse")]
        System.Threading.Tasks.Task<CurseServices.AddOnService.DownloadToken> GetSecureDownloadTokenAsync(int fileID, int userID, bool hasPremium, int subscriptionToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://addonservice.curse.com/IAddOnService/GetSyncProfile", ReplyAction="http://addonservice.curse.com/IAddOnService/GetSyncProfileResponse")]
        CurseServices.AddOnService.ServiceResponseOfArrayOfSyncedGameInstanceeheogrl4 GetSyncProfile();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://addonservice.curse.com/IAddOnService/GetSyncProfile", ReplyAction="http://addonservice.curse.com/IAddOnService/GetSyncProfileResponse")]
        System.Threading.Tasks.Task<CurseServices.AddOnService.ServiceResponseOfArrayOfSyncedGameInstanceeheogrl4> GetSyncProfileAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://addonservice.curse.com/IAddOnService/CreateSyncGroup", ReplyAction="http://addonservice.curse.com/IAddOnService/CreateSyncGroupResponse")]
        CurseServices.AddOnService.ServiceResponseOfSyncedGameInstanceeheogrl4 CreateSyncGroup(string instanceName, int gameID, string computerName, string instanceGUID, string instanceLabel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://addonservice.curse.com/IAddOnService/CreateSyncGroup", ReplyAction="http://addonservice.curse.com/IAddOnService/CreateSyncGroupResponse")]
        System.Threading.Tasks.Task<CurseServices.AddOnService.ServiceResponseOfSyncedGameInstanceeheogrl4> CreateSyncGroupAsync(string instanceName, int gameID, string computerName, string instanceGUID, string instanceLabel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://addonservice.curse.com/IAddOnService/JoinSyncGroup", ReplyAction="http://addonservice.curse.com/IAddOnService/JoinSyncGroupResponse")]
        CurseServices.AddOnService.ServiceResponse JoinSyncGroup(int instanceID, string computerName, string instanceGUID, string instanceLabel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://addonservice.curse.com/IAddOnService/JoinSyncGroup", ReplyAction="http://addonservice.curse.com/IAddOnService/JoinSyncGroupResponse")]
        System.Threading.Tasks.Task<CurseServices.AddOnService.ServiceResponse> JoinSyncGroupAsync(int instanceID, string computerName, string instanceGUID, string instanceLabel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://addonservice.curse.com/IAddOnService/LeaveSyncGroup", ReplyAction="http://addonservice.curse.com/IAddOnService/LeaveSyncGroupResponse")]
        CurseServices.AddOnService.ServiceResponse LeaveSyncGroup(int instanceID, int computerID, string instanceGUID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://addonservice.curse.com/IAddOnService/LeaveSyncGroup", ReplyAction="http://addonservice.curse.com/IAddOnService/LeaveSyncGroupResponse")]
        System.Threading.Tasks.Task<CurseServices.AddOnService.ServiceResponse> LeaveSyncGroupAsync(int instanceID, int computerID, string instanceGUID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://addonservice.curse.com/IAddOnService/SaveSyncSnapshot", ReplyAction="http://addonservice.curse.com/IAddOnService/SaveSyncSnapshotResponse")]
        CurseServices.AddOnService.ServiceResponse SaveSyncSnapshot(int instanceID, System.Collections.Generic.List<CurseServices.AddOnService.SyncedAddon> syncedAddons);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://addonservice.curse.com/IAddOnService/SaveSyncSnapshot", ReplyAction="http://addonservice.curse.com/IAddOnService/SaveSyncSnapshotResponse")]
        System.Threading.Tasks.Task<CurseServices.AddOnService.ServiceResponse> SaveSyncSnapshotAsync(int instanceID, System.Collections.Generic.List<CurseServices.AddOnService.SyncedAddon> syncedAddons);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://addonservice.curse.com/IAddOnService/SaveSyncTransactions", ReplyAction="http://addonservice.curse.com/IAddOnService/SaveSyncTransactionsResponse")]
        CurseServices.AddOnService.ServiceResponse SaveSyncTransactions(int instanceID, System.Collections.Generic.List<CurseServices.AddOnService.SyncTransaction> transactions);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://addonservice.curse.com/IAddOnService/SaveSyncTransactions", ReplyAction="http://addonservice.curse.com/IAddOnService/SaveSyncTransactionsResponse")]
        System.Threading.Tasks.Task<CurseServices.AddOnService.ServiceResponse> SaveSyncTransactionsAsync(int instanceID, System.Collections.Generic.List<CurseServices.AddOnService.SyncTransaction> transactions);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://addonservice.curse.com/IAddOnService/GetSavedGames", ReplyAction="http://addonservice.curse.com/IAddOnService/GetSavedGamesResponse")]
        CurseServices.AddOnService.ServiceResponseOfArrayOfSavedGameeheogrl4 GetSavedGames();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://addonservice.curse.com/IAddOnService/GetSavedGames", ReplyAction="http://addonservice.curse.com/IAddOnService/GetSavedGamesResponse")]
        System.Threading.Tasks.Task<CurseServices.AddOnService.ServiceResponseOfArrayOfSavedGameeheogrl4> GetSavedGamesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://addonservice.curse.com/IAddOnService/DeleteSavedGame", ReplyAction="http://addonservice.curse.com/IAddOnService/DeleteSavedGameResponse")]
        CurseServices.AddOnService.ServiceResponse DeleteSavedGame(int savedGameId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://addonservice.curse.com/IAddOnService/DeleteSavedGame", ReplyAction="http://addonservice.curse.com/IAddOnService/DeleteSavedGameResponse")]
        System.Threading.Tasks.Task<CurseServices.AddOnService.ServiceResponse> DeleteSavedGameAsync(int savedGameId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://addonservice.curse.com/IAddOnService/DeleteSavedGameRevision", ReplyAction="http://addonservice.curse.com/IAddOnService/DeleteSavedGameRevisionResponse")]
        CurseServices.AddOnService.ServiceResponse DeleteSavedGameRevision(int savedGameId, int savedGameRevisionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://addonservice.curse.com/IAddOnService/DeleteSavedGameRevision", ReplyAction="http://addonservice.curse.com/IAddOnService/DeleteSavedGameRevisionResponse")]
        System.Threading.Tasks.Task<CurseServices.AddOnService.ServiceResponse> DeleteSavedGameRevisionAsync(int savedGameId, int savedGameRevisionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://addonservice.curse.com/IAddOnService/SetSavedGameStatus", ReplyAction="http://addonservice.curse.com/IAddOnService/SetSavedGameStatusResponse")]
        CurseServices.AddOnService.ServiceResponse SetSavedGameStatus(int savedGameId, CurseServices.AddOnService.ESavedGameStatus status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://addonservice.curse.com/IAddOnService/SetSavedGameStatus", ReplyAction="http://addonservice.curse.com/IAddOnService/SetSavedGameStatusResponse")]
        System.Threading.Tasks.Task<CurseServices.AddOnService.ServiceResponse> SetSavedGameStatusAsync(int savedGameId, CurseServices.AddOnService.ESavedGameStatus status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://addonservice.curse.com/IAddOnService/SetSavedGameName", ReplyAction="http://addonservice.curse.com/IAddOnService/SetSavedGameNameResponse")]
        CurseServices.AddOnService.ServiceResponse SetSavedGameName(int savedGameId, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://addonservice.curse.com/IAddOnService/SetSavedGameName", ReplyAction="http://addonservice.curse.com/IAddOnService/SetSavedGameNameResponse")]
        System.Threading.Tasks.Task<CurseServices.AddOnService.ServiceResponse> SetSavedGameNameAsync(int savedGameId, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://addonservice.curse.com/IAddOnService/SetSavedGameDescription", ReplyAction="http://addonservice.curse.com/IAddOnService/SetSavedGameDescriptionResponse")]
        CurseServices.AddOnService.ServiceResponse SetSavedGameDescription(int savedGameId, string description);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://addonservice.curse.com/IAddOnService/SetSavedGameDescription", ReplyAction="http://addonservice.curse.com/IAddOnService/SetSavedGameDescriptionResponse")]
        System.Threading.Tasks.Task<CurseServices.AddOnService.ServiceResponse> SetSavedGameDescriptionAsync(int savedGameId, string description);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://addonservice.curse.com/IAddOnService/SetSavedGameDefaultRevision", ReplyAction="http://addonservice.curse.com/IAddOnService/SetSavedGameDefaultRevisionResponse")]
        CurseServices.AddOnService.ServiceResponse SetSavedGameDefaultRevision(int savedGameId, int revisionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://addonservice.curse.com/IAddOnService/SetSavedGameDefaultRevision", ReplyAction="http://addonservice.curse.com/IAddOnService/SetSavedGameDefaultRevisionResponse")]
        System.Threading.Tasks.Task<CurseServices.AddOnService.ServiceResponse> SetSavedGameDefaultRevisionAsync(int savedGameId, int revisionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://addonservice.curse.com/IAddOnService/SetSavedGameFavoriteRevision", ReplyAction="http://addonservice.curse.com/IAddOnService/SetSavedGameFavoriteRevisionResponse")]
        CurseServices.AddOnService.ServiceResponse SetSavedGameFavoriteRevision(int savedGameId, int revisionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://addonservice.curse.com/IAddOnService/SetSavedGameFavoriteRevision", ReplyAction="http://addonservice.curse.com/IAddOnService/SetSavedGameFavoriteRevisionResponse")]
        System.Threading.Tasks.Task<CurseServices.AddOnService.ServiceResponse> SetSavedGameFavoriteRevisionAsync(int savedGameId, int revisionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://addonservice.curse.com/IAddOnService/GetSavedGameConstraints", ReplyAction="http://addonservice.curse.com/IAddOnService/GetSavedGameConstraintsResponse")]
        CurseServices.AddOnService.ServiceResponseOfSavedGameConstraintseheogrl4 GetSavedGameConstraints();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://addonservice.curse.com/IAddOnService/GetSavedGameConstraints", ReplyAction="http://addonservice.curse.com/IAddOnService/GetSavedGameConstraintsResponse")]
        System.Threading.Tasks.Task<CurseServices.AddOnService.ServiceResponseOfSavedGameConstraintseheogrl4> GetSavedGameConstraintsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://addonservice.curse.com/IAddOnService/GetSavedGameRestrictionLevel", ReplyAction="http://addonservice.curse.com/IAddOnService/GetSavedGameRestrictionLevelResponse")]
        CurseServices.AddOnService.ServiceResponseOfESavedGameRestrictionLeveleheogrl4 GetSavedGameRestrictionLevel();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://addonservice.curse.com/IAddOnService/GetSavedGameRestrictionLevel", ReplyAction="http://addonservice.curse.com/IAddOnService/GetSavedGameRestrictionLevelResponse")]
        System.Threading.Tasks.Task<CurseServices.AddOnService.ServiceResponseOfESavedGameRestrictionLeveleheogrl4> GetSavedGameRestrictionLevelAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://addonservice.curse.com/IAddOnService/UploadAvailableForUser", ReplyAction="http://addonservice.curse.com/IAddOnService/UploadAvailableForUserResponse")]
        CurseServices.AddOnService.ServiceResponse UploadAvailableForUser();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://addonservice.curse.com/IAddOnService/UploadAvailableForUser", ReplyAction="http://addonservice.curse.com/IAddOnService/UploadAvailableForUserResponse")]
        System.Threading.Tasks.Task<CurseServices.AddOnService.ServiceResponse> UploadAvailableForUserAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://addonservice.curse.com/IAddOnService/GetAddOnDump", ReplyAction="http://addonservice.curse.com/IAddOnService/GetAddOnDumpResponse")]
        System.IO.Stream GetAddOnDump(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://addonservice.curse.com/IAddOnService/GetAddOnDump", ReplyAction="http://addonservice.curse.com/IAddOnService/GetAddOnDumpResponse")]
        System.Threading.Tasks.Task<System.IO.Stream> GetAddOnDumpAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://addonservice.curse.com/IAddOnService/ResetAllAddonCache", ReplyAction="http://addonservice.curse.com/IAddOnService/ResetAllAddonCacheResponse")]
        string ResetAllAddonCache();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://addonservice.curse.com/IAddOnService/ResetAllAddonCache", ReplyAction="http://addonservice.curse.com/IAddOnService/ResetAllAddonCacheResponse")]
        System.Threading.Tasks.Task<string> ResetAllAddonCacheAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://addonservice.curse.com/IAddOnService/ResetSingleAddonCache", ReplyAction="http://addonservice.curse.com/IAddOnService/ResetSingleAddonCacheResponse")]
        string ResetSingleAddonCache(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://addonservice.curse.com/IAddOnService/ResetSingleAddonCache", ReplyAction="http://addonservice.curse.com/IAddOnService/ResetSingleAddonCacheResponse")]
        System.Threading.Tasks.Task<string> ResetSingleAddonCacheAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://addonservice.curse.com/IAddOnService/SetSavedGameRestrictionLevel", ReplyAction="http://addonservice.curse.com/IAddOnService/SetSavedGameRestrictionLevelResponse")]
        CurseServices.AddOnService.ServiceResponse SetSavedGameRestrictionLevel(CurseServices.AddOnService.ESavedGameRestrictionLevel restrictionLevel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://addonservice.curse.com/IAddOnService/SetSavedGameRestrictionLevel", ReplyAction="http://addonservice.curse.com/IAddOnService/SetSavedGameRestrictionLevelResponse")]
        System.Threading.Tasks.Task<CurseServices.AddOnService.ServiceResponse> SetSavedGameRestrictionLevelAsync(CurseServices.AddOnService.ESavedGameRestrictionLevel restrictionLevel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://addonservice.curse.com/IAddOnService/HealthCheck", ReplyAction="http://addonservice.curse.com/IAddOnService/HealthCheckResponse")]
        string HealthCheck();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://addonservice.curse.com/IAddOnService/HealthCheck", ReplyAction="http://addonservice.curse.com/IAddOnService/HealthCheckResponse")]
        System.Threading.Tasks.Task<string> HealthCheckAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://addonservice.curse.com/IAddOnService/GetAllFilesForAddOn", ReplyAction="http://addonservice.curse.com/IAddOnService/GetAllFilesForAddOnResponse")]
        System.Collections.Generic.List<CurseServices.AddOnService.AddOnFile> GetAllFilesForAddOn(int addOnID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://addonservice.curse.com/IAddOnService/GetAllFilesForAddOn", ReplyAction="http://addonservice.curse.com/IAddOnService/GetAllFilesForAddOnResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<CurseServices.AddOnService.AddOnFile>> GetAllFilesForAddOnAsync(int addOnID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAddOnServiceChannel : CurseServices.AddOnService.IAddOnService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddOnServiceClient : System.ServiceModel.ClientBase<CurseServices.AddOnService.IAddOnService>, CurseServices.AddOnService.IAddOnService {
        
        public AddOnServiceClient() {
        }
        
        public AddOnServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AddOnServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AddOnServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AddOnServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public CurseServices.AddOnService.AddOn GetAddOn(int id) {
            return base.Channel.GetAddOn(id);
        }
        
        public System.Threading.Tasks.Task<CurseServices.AddOnService.AddOn> GetAddOnAsync(int id) {
            return base.Channel.GetAddOnAsync(id);
        }
        
        public CurseServices.AddOnService.RepositoryMatch GetRepositoryMatchFromSlug(string gameSlug, string addonSlug) {
            return base.Channel.GetRepositoryMatchFromSlug(gameSlug, addonSlug);
        }
        
        public System.Threading.Tasks.Task<CurseServices.AddOnService.RepositoryMatch> GetRepositoryMatchFromSlugAsync(string gameSlug, string addonSlug) {
            return base.Channel.GetRepositoryMatchFromSlugAsync(gameSlug, addonSlug);
        }
        
        public string GetChangeLog(int addonID, int fileID) {
            return base.Channel.GetChangeLog(addonID, fileID);
        }
        
        public System.Threading.Tasks.Task<string> GetChangeLogAsync(int addonID, int fileID) {
            return base.Channel.GetChangeLogAsync(addonID, fileID);
        }
        
        public string v2GetChangeLog(int addonID, int fileID) {
            return base.Channel.v2GetChangeLog(addonID, fileID);
        }
        
        public System.Threading.Tasks.Task<string> v2GetChangeLogAsync(int addonID, int fileID) {
            return base.Channel.v2GetChangeLogAsync(addonID, fileID);
        }
        
        public string GetAddOnDescription(int id) {
            return base.Channel.GetAddOnDescription(id);
        }
        
        public System.Threading.Tasks.Task<string> GetAddOnDescriptionAsync(int id) {
            return base.Channel.GetAddOnDescriptionAsync(id);
        }
        
        public string v2GetAddOnDescription(int id) {
            return base.Channel.v2GetAddOnDescription(id);
        }
        
        public System.Threading.Tasks.Task<string> v2GetAddOnDescriptionAsync(int id) {
            return base.Channel.v2GetAddOnDescriptionAsync(id);
        }
        
        public CurseServices.AddOnService.AddOnFile GetAddOnFile(int addonID, int fileID) {
            return base.Channel.GetAddOnFile(addonID, fileID);
        }
        
        public System.Threading.Tasks.Task<CurseServices.AddOnService.AddOnFile> GetAddOnFileAsync(int addonID, int fileID) {
            return base.Channel.GetAddOnFileAsync(addonID, fileID);
        }
        
        public System.Collections.Generic.List<CurseServices.AddOnService.AddOn> GetAddOns(System.Collections.Generic.List<int> ids) {
            return base.Channel.GetAddOns(ids);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<CurseServices.AddOnService.AddOn>> GetAddOnsAsync(System.Collections.Generic.List<int> ids) {
            return base.Channel.GetAddOnsAsync(ids);
        }
        
        public System.Collections.Generic.List<CurseServices.AddOnService.AddOn> v2GetAddOns(System.Collections.Generic.List<int> ids) {
            return base.Channel.v2GetAddOns(ids);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<CurseServices.AddOnService.AddOn>> v2GetAddOnsAsync(System.Collections.Generic.List<int> ids) {
            return base.Channel.v2GetAddOnsAsync(ids);
        }
        
        public CurseServices.AddOnService.FingerprintMatchResult GetFingerprintMatches(System.Collections.Generic.List<long> fingerprints) {
            return base.Channel.GetFingerprintMatches(fingerprints);
        }
        
        public System.Threading.Tasks.Task<CurseServices.AddOnService.FingerprintMatchResult> GetFingerprintMatchesAsync(System.Collections.Generic.List<long> fingerprints) {
            return base.Channel.GetFingerprintMatchesAsync(fingerprints);
        }
        
        public CurseServices.AddOnService.FingerprintMatchResult v2GetFingerprintMatches(System.Collections.Generic.List<long> fingerprints) {
            return base.Channel.v2GetFingerprintMatches(fingerprints);
        }
        
        public System.Threading.Tasks.Task<CurseServices.AddOnService.FingerprintMatchResult> v2GetFingerprintMatchesAsync(System.Collections.Generic.List<long> fingerprints) {
            return base.Channel.v2GetFingerprintMatchesAsync(fingerprints);
        }
        
        public System.Collections.Generic.List<CurseServices.AddOnService.FuzzyMatch> GetFuzzyMatches(int gameID, System.Collections.Generic.List<CurseServices.AddOnService.FolderFingerprint> folderFingerprints) {
            return base.Channel.GetFuzzyMatches(gameID, folderFingerprints);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<CurseServices.AddOnService.FuzzyMatch>> GetFuzzyMatchesAsync(int gameID, System.Collections.Generic.List<CurseServices.AddOnService.FolderFingerprint> folderFingerprints) {
            return base.Channel.GetFuzzyMatchesAsync(gameID, folderFingerprints);
        }
        
        public CurseServices.AddOnService.DownloadToken GetDownloadToken(int fileID) {
            return base.Channel.GetDownloadToken(fileID);
        }
        
        public System.Threading.Tasks.Task<CurseServices.AddOnService.DownloadToken> GetDownloadTokenAsync(int fileID) {
            return base.Channel.GetDownloadTokenAsync(fileID);
        }
        
        public CurseServices.AddOnService.DownloadToken GetSecureDownloadToken(int fileID, int userID, bool hasPremium, int subscriptionToken) {
            return base.Channel.GetSecureDownloadToken(fileID, userID, hasPremium, subscriptionToken);
        }
        
        public System.Threading.Tasks.Task<CurseServices.AddOnService.DownloadToken> GetSecureDownloadTokenAsync(int fileID, int userID, bool hasPremium, int subscriptionToken) {
            return base.Channel.GetSecureDownloadTokenAsync(fileID, userID, hasPremium, subscriptionToken);
        }
        
        public CurseServices.AddOnService.ServiceResponseOfArrayOfSyncedGameInstanceeheogrl4 GetSyncProfile() {
            return base.Channel.GetSyncProfile();
        }
        
        public System.Threading.Tasks.Task<CurseServices.AddOnService.ServiceResponseOfArrayOfSyncedGameInstanceeheogrl4> GetSyncProfileAsync() {
            return base.Channel.GetSyncProfileAsync();
        }
        
        public CurseServices.AddOnService.ServiceResponseOfSyncedGameInstanceeheogrl4 CreateSyncGroup(string instanceName, int gameID, string computerName, string instanceGUID, string instanceLabel) {
            return base.Channel.CreateSyncGroup(instanceName, gameID, computerName, instanceGUID, instanceLabel);
        }
        
        public System.Threading.Tasks.Task<CurseServices.AddOnService.ServiceResponseOfSyncedGameInstanceeheogrl4> CreateSyncGroupAsync(string instanceName, int gameID, string computerName, string instanceGUID, string instanceLabel) {
            return base.Channel.CreateSyncGroupAsync(instanceName, gameID, computerName, instanceGUID, instanceLabel);
        }
        
        public CurseServices.AddOnService.ServiceResponse JoinSyncGroup(int instanceID, string computerName, string instanceGUID, string instanceLabel) {
            return base.Channel.JoinSyncGroup(instanceID, computerName, instanceGUID, instanceLabel);
        }
        
        public System.Threading.Tasks.Task<CurseServices.AddOnService.ServiceResponse> JoinSyncGroupAsync(int instanceID, string computerName, string instanceGUID, string instanceLabel) {
            return base.Channel.JoinSyncGroupAsync(instanceID, computerName, instanceGUID, instanceLabel);
        }
        
        public CurseServices.AddOnService.ServiceResponse LeaveSyncGroup(int instanceID, int computerID, string instanceGUID) {
            return base.Channel.LeaveSyncGroup(instanceID, computerID, instanceGUID);
        }
        
        public System.Threading.Tasks.Task<CurseServices.AddOnService.ServiceResponse> LeaveSyncGroupAsync(int instanceID, int computerID, string instanceGUID) {
            return base.Channel.LeaveSyncGroupAsync(instanceID, computerID, instanceGUID);
        }
        
        public CurseServices.AddOnService.ServiceResponse SaveSyncSnapshot(int instanceID, System.Collections.Generic.List<CurseServices.AddOnService.SyncedAddon> syncedAddons) {
            return base.Channel.SaveSyncSnapshot(instanceID, syncedAddons);
        }
        
        public System.Threading.Tasks.Task<CurseServices.AddOnService.ServiceResponse> SaveSyncSnapshotAsync(int instanceID, System.Collections.Generic.List<CurseServices.AddOnService.SyncedAddon> syncedAddons) {
            return base.Channel.SaveSyncSnapshotAsync(instanceID, syncedAddons);
        }
        
        public CurseServices.AddOnService.ServiceResponse SaveSyncTransactions(int instanceID, System.Collections.Generic.List<CurseServices.AddOnService.SyncTransaction> transactions) {
            return base.Channel.SaveSyncTransactions(instanceID, transactions);
        }
        
        public System.Threading.Tasks.Task<CurseServices.AddOnService.ServiceResponse> SaveSyncTransactionsAsync(int instanceID, System.Collections.Generic.List<CurseServices.AddOnService.SyncTransaction> transactions) {
            return base.Channel.SaveSyncTransactionsAsync(instanceID, transactions);
        }
        
        public CurseServices.AddOnService.ServiceResponseOfArrayOfSavedGameeheogrl4 GetSavedGames() {
            return base.Channel.GetSavedGames();
        }
        
        public System.Threading.Tasks.Task<CurseServices.AddOnService.ServiceResponseOfArrayOfSavedGameeheogrl4> GetSavedGamesAsync() {
            return base.Channel.GetSavedGamesAsync();
        }
        
        public CurseServices.AddOnService.ServiceResponse DeleteSavedGame(int savedGameId) {
            return base.Channel.DeleteSavedGame(savedGameId);
        }
        
        public System.Threading.Tasks.Task<CurseServices.AddOnService.ServiceResponse> DeleteSavedGameAsync(int savedGameId) {
            return base.Channel.DeleteSavedGameAsync(savedGameId);
        }
        
        public CurseServices.AddOnService.ServiceResponse DeleteSavedGameRevision(int savedGameId, int savedGameRevisionId) {
            return base.Channel.DeleteSavedGameRevision(savedGameId, savedGameRevisionId);
        }
        
        public System.Threading.Tasks.Task<CurseServices.AddOnService.ServiceResponse> DeleteSavedGameRevisionAsync(int savedGameId, int savedGameRevisionId) {
            return base.Channel.DeleteSavedGameRevisionAsync(savedGameId, savedGameRevisionId);
        }
        
        public CurseServices.AddOnService.ServiceResponse SetSavedGameStatus(int savedGameId, CurseServices.AddOnService.ESavedGameStatus status) {
            return base.Channel.SetSavedGameStatus(savedGameId, status);
        }
        
        public System.Threading.Tasks.Task<CurseServices.AddOnService.ServiceResponse> SetSavedGameStatusAsync(int savedGameId, CurseServices.AddOnService.ESavedGameStatus status) {
            return base.Channel.SetSavedGameStatusAsync(savedGameId, status);
        }
        
        public CurseServices.AddOnService.ServiceResponse SetSavedGameName(int savedGameId, string name) {
            return base.Channel.SetSavedGameName(savedGameId, name);
        }
        
        public System.Threading.Tasks.Task<CurseServices.AddOnService.ServiceResponse> SetSavedGameNameAsync(int savedGameId, string name) {
            return base.Channel.SetSavedGameNameAsync(savedGameId, name);
        }
        
        public CurseServices.AddOnService.ServiceResponse SetSavedGameDescription(int savedGameId, string description) {
            return base.Channel.SetSavedGameDescription(savedGameId, description);
        }
        
        public System.Threading.Tasks.Task<CurseServices.AddOnService.ServiceResponse> SetSavedGameDescriptionAsync(int savedGameId, string description) {
            return base.Channel.SetSavedGameDescriptionAsync(savedGameId, description);
        }
        
        public CurseServices.AddOnService.ServiceResponse SetSavedGameDefaultRevision(int savedGameId, int revisionId) {
            return base.Channel.SetSavedGameDefaultRevision(savedGameId, revisionId);
        }
        
        public System.Threading.Tasks.Task<CurseServices.AddOnService.ServiceResponse> SetSavedGameDefaultRevisionAsync(int savedGameId, int revisionId) {
            return base.Channel.SetSavedGameDefaultRevisionAsync(savedGameId, revisionId);
        }
        
        public CurseServices.AddOnService.ServiceResponse SetSavedGameFavoriteRevision(int savedGameId, int revisionId) {
            return base.Channel.SetSavedGameFavoriteRevision(savedGameId, revisionId);
        }
        
        public System.Threading.Tasks.Task<CurseServices.AddOnService.ServiceResponse> SetSavedGameFavoriteRevisionAsync(int savedGameId, int revisionId) {
            return base.Channel.SetSavedGameFavoriteRevisionAsync(savedGameId, revisionId);
        }
        
        public CurseServices.AddOnService.ServiceResponseOfSavedGameConstraintseheogrl4 GetSavedGameConstraints() {
            return base.Channel.GetSavedGameConstraints();
        }
        
        public System.Threading.Tasks.Task<CurseServices.AddOnService.ServiceResponseOfSavedGameConstraintseheogrl4> GetSavedGameConstraintsAsync() {
            return base.Channel.GetSavedGameConstraintsAsync();
        }
        
        public CurseServices.AddOnService.ServiceResponseOfESavedGameRestrictionLeveleheogrl4 GetSavedGameRestrictionLevel() {
            return base.Channel.GetSavedGameRestrictionLevel();
        }
        
        public System.Threading.Tasks.Task<CurseServices.AddOnService.ServiceResponseOfESavedGameRestrictionLeveleheogrl4> GetSavedGameRestrictionLevelAsync() {
            return base.Channel.GetSavedGameRestrictionLevelAsync();
        }
        
        public CurseServices.AddOnService.ServiceResponse UploadAvailableForUser() {
            return base.Channel.UploadAvailableForUser();
        }
        
        public System.Threading.Tasks.Task<CurseServices.AddOnService.ServiceResponse> UploadAvailableForUserAsync() {
            return base.Channel.UploadAvailableForUserAsync();
        }
        
        public System.IO.Stream GetAddOnDump(int id) {
            return base.Channel.GetAddOnDump(id);
        }
        
        public System.Threading.Tasks.Task<System.IO.Stream> GetAddOnDumpAsync(int id) {
            return base.Channel.GetAddOnDumpAsync(id);
        }
        
        public string ResetAllAddonCache() {
            return base.Channel.ResetAllAddonCache();
        }
        
        public System.Threading.Tasks.Task<string> ResetAllAddonCacheAsync() {
            return base.Channel.ResetAllAddonCacheAsync();
        }
        
        public string ResetSingleAddonCache(int id) {
            return base.Channel.ResetSingleAddonCache(id);
        }
        
        public System.Threading.Tasks.Task<string> ResetSingleAddonCacheAsync(int id) {
            return base.Channel.ResetSingleAddonCacheAsync(id);
        }
        
        public CurseServices.AddOnService.ServiceResponse SetSavedGameRestrictionLevel(CurseServices.AddOnService.ESavedGameRestrictionLevel restrictionLevel) {
            return base.Channel.SetSavedGameRestrictionLevel(restrictionLevel);
        }
        
        public System.Threading.Tasks.Task<CurseServices.AddOnService.ServiceResponse> SetSavedGameRestrictionLevelAsync(CurseServices.AddOnService.ESavedGameRestrictionLevel restrictionLevel) {
            return base.Channel.SetSavedGameRestrictionLevelAsync(restrictionLevel);
        }
        
        public string HealthCheck() {
            return base.Channel.HealthCheck();
        }
        
        public System.Threading.Tasks.Task<string> HealthCheckAsync() {
            return base.Channel.HealthCheckAsync();
        }
        
        public System.Collections.Generic.List<CurseServices.AddOnService.AddOnFile> GetAllFilesForAddOn(int addOnID) {
            return base.Channel.GetAllFilesForAddOn(addOnID);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<CurseServices.AddOnService.AddOnFile>> GetAllFilesForAddOnAsync(int addOnID) {
            return base.Channel.GetAllFilesForAddOnAsync(addOnID);
        }
    }
}
